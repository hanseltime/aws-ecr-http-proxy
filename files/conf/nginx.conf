user  nginx;
worker_processes  auto;

# error log config comes from external file created by entrypoint, to toggle debug on/off.
error_log  /var/log/nginx/error.log LOG_LEVEL;

pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
  map_hash_bucket_size 128;
  include       mime.types;
  default_type  application/octet-stream;

  # We need to resolve the real names of our proxied servers.
  #resolver 8.8.8.8 4.2.2.2 ipv6=off; # Avoid ipv6 addresses for now
  include RESOLVERS_PATH;

  # Use a debug-oriented logging format.
  # log_format debugging escape=json
  #   '{'
  #     '"access_time":"$time_local",'
  #     '"remote_addr":"$remote_addr",'
  #     '"remote_user":"$remote_user",'
  #     '"request":"$request",'
  #     '"status":"$status",'
  #     '"bytes_sent":"$body_bytes_sent",'
  #     '"host":"$host",'
  #     '"proxy_host":"$proxy_host",'
  #     '"upstream":"$upstream_addr"'
  #     '"upstream_status":"$upstream_status",'
  #     '"ssl_protocol":"$ssl_protocol",'
  #     '"connect_host":"$connect_host",'
  #     '"connect_port":"$connect_port",'
  #     '"connect_addr":"$connect_addr",'
  #     '"upstream_http_location":"$upstream_http_location",'
  #     '"upstream_cache_status":"$upstream_cache_status",'
  #     '"http_authorization":"$http_authorization",'
  #   '}';

  # log_format debug_proxy escape=json
  #   '{'
  #     '"access_time":"$time_local",'
  #     '"remote_addr":"$remote_addr",'
  #     '"remote_user":"$remote_user",'
  #     '"request":"$request",'
  #     '"status":"$status",'
  #     '"bytes_sent":"$body_bytes_sent",'
  #     '"host":"$host",'
  #     '"proxy_host":"$proxy_host",'
  #     '"upstream":"$upstream_addr"'
  #     '"upstream_status":"$upstream_status",'
  #     '"ssl_protocol":"$ssl_protocol",'
  #     '"connect_host":"$connect_host",'
  #     '"connect_port":"$connect_port",'
  #     '"connect_addr":"$connect_addr",'
  #     '"upstream_http_location":"$upstream_http_location",'
  #     '"upstream_cache_status":"$upstream_cache_status",'
  #     '"http_authorization":"$http_authorization",'
  #   '}';

  # log_format tweaked escape=json
  #   '{'
  #     '"access_time":"$time_local",'
  #     '"upstream_cache_status":"$upstream_cache_status",'
  #     '"method":"$request_method",'
  #     '"uri":"$uri",'
  #     '"request_type":"$docker_proxy_request_type",'
  #     '"status":"$status",'
  #     '"bytes_sent":"$body_bytes_sent",'
  #     '"upstream_response_time":"$upstream_response_time",'
  #     '"host":"$host",'
  #     '"proxy_host":"$proxy_host",'
  #     '"upstream":"$upstream_addr"'
  #   '}';

  # Just in case you want to rewrite some hosts. Default maps directly.
  # map $host $targetHost {
  #     hostnames;
  #     include /etc/nginx/docker.targetHost.map;
  #     default $host;
  # }

  keepalive_timeout 65;
  sendfile on;

  proxy_cache_path /cache/cache levels=1:2 keys_zone=cache:16m inactive=1y max_size=CACHE_MAX_SIZE use_temp_path=off;

  # this is necessary for us to be able to disable request buffering in all cases
  proxy_http_version 1.1;

  #https://docs.docker.com/registry/recipes/nginx/#setting-things-up
  map $upstream_http_docker_distribution_api_version $docker_distribution_api_version {
  '' 'registry/2.0';
  }

  # start-nginx-mirrors
}
