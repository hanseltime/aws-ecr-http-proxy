  # Start maps For Https Proxy
  # ECR pull through cache url path portions mapped to the particular host coming in
  map $host $targetHost {
      hostnames;
      include TARGET_MAP_PATH;
      default $host;
  }

  # Map to decide which hosts get directed to the pull through server.
  # By default, we don't intercept, allowing free flow of non-registry traffic
  map $host $interceptedHost {
      hostnames;
      include INTERCEPT_MAP_PATH;
  }
  # End maps For Https Proxy  
  
  # The proxy director layer, listens on 3128 - sends requests to different servers
  server {
      listen 3128;
      listen [::]:3128;
      server_name proxy_director_;

      # dont log the CONNECT proxy.
      #access_log /var/log/nginx/access.log debug_proxy;
      access_log off;
      set $docker_proxy_request_type "unknown-connect";

    #   proxy_connect;
    #   proxy_connect_allow all;
    #   proxy_connect_address $interceptedHost;
    #   proxy_max_temp_file_size 0;

      # forward proxy for non-CONNECT request
      location / {
          # Proxy to internal server
          if ($interceptedHost) {
            proxy_pass $scheme://$interceptedHost;
            break;
          }

          proxy_pass $scheme://$host;
      }

      location /ca.crt {
            alias /ca/ca.crt;
      }
  }

  # The actual orchestration server for routing to different registries
  server {
    listen 80 default_server;
    listen 443 ssl default_server;

    # Send upstream status as header
    add_header X-Docker-Registry-Proxy-Cache-Upstream-Status "$upstream_cache_status";

    # Use the generated certificates, they contain names for all the proxied registries.
    ssl_certificate /certs/fullchain.pem;
    ssl_certificate_key /certs/web.key;

    # Docker needs this. Don't ask.
    chunked_transfer_encoding on;

    proxy_read_timeout 900;

    # Use SNI during the TLS handshake with the upstream.
    proxy_ssl_server_name on;

    # This comes from a include file generated by the entrypoint.
    include VERIFY_SSL_PATH;

    # All V2 files passed up
    # https://docs.docker.com/registry/spec/api/#blob
    location ~ ^/v2/(.*)/(manifests|blobs|tags)/(.*)$ {
      set $url        UPSTREAM;
      proxy_pass      $url/v2/$targetHost/$1/$2/$3;
      proxy_redirect  $url $scheme://$host;

      # Add AWS ECR authentication headers
      proxy_set_header  X-Real-IP          $remote_addr;
      proxy_set_header  X-Forwarded-For    $remote_addr;
      # Set the proxy auth header
      include AUTH_CONF_PATH;
      proxy_set_header  X-Forwarded-Proto  $scheme;
    }
  }